on:
- push
name: Build and test
jobs:
  go-version:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      minimal: ${{ steps.go-version.outputs.minimal }}
      matrix: ${{ steps.go-version.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: arnested/go-version-action@v1
      id: go-version
  go_generate:
    name: Check generated code is up to date
    if: '!github.event.deleted'
    needs: go-version
    runs-on: ubuntu-latest
    env:
      workdir: go/src/${{ github.repository }}
    steps:
    - uses: actions/checkout@v2.3.4
      with:
        path: ${{env.workdir}}
    - name: Install Go ${{ needs.go-version.outputs.minimal }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.go-version.outputs.minimal }}
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      working-directory: ${{env.workdir}}
      run: go generate -x
    - name: Diff after go generate
      working-directory: ${{env.workdir}}
      run: git diff --exit-code
  build_and_test:
    name: Build and test
    if: '!github.event.deleted'
    needs: go-version
    runs-on: macos-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-version.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Install Go ${{ matrix.go-version }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: go test
      env:
        GO111MODULE: 'on'
        # We enable cgo to be able to test with `-race`.
        CGO_ENABLED: 1 
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v1.5.2
      with:
        flags: go${{ matrix.go-version }}
        token: ${{ secrets.CODECOV_TOKEN }}
  license_check:
    name: License check
    needs: go-version
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Install Go ${{ needs.go-version.outputs.minimal }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.go-version.outputs.minimal }}
    - name: Install wwhrd
      env:
        GO111MODULE: 'off'
      run: go get -u github.com/frapposelli/wwhrd
    - name: go mod vendor
      env:
        GO111MODULE: 'on'
      run: go mod vendor
    - name: wwhrd check
      run: wwhrd check
